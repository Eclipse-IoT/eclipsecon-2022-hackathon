apiVersion: apps/v1
kind: Deployment
metadata:
  name: btmesh-operator
  labels:
    app.kubernetes.io/name: btmesh-operator
    app.kubernetes.io/instance: eclipsecon-2022
    app.kubernetes.io/component: btmesh-operator
  annotations:
    image.openshift.io/triggers: |
      [
        {
          "from": {
            "kind":"ImageStreamTag",
            "name":"btmesh-operator:latest"
          },
          "fieldPath":"spec.template.spec.containers[?(@.name==\"server\")].image"
        }
      ]
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: btmesh-operator
      app.kubernetes.io/instance: eclipsecon-2022
      app.kubernetes.io/component: btmesh-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: btmesh-operator
        app.kubernetes.io/instance: eclipsecon-2022
        app.kubernetes.io/component: btmesh-operator
    spec:
      containers:
      - name: server
        image: btmesh-operator:latest
        env:
          - name: RUST_LOG
            value: btmesh_operator=debug
          - name: DROGUE_APPLICATION
            valueFrom:
              secretKeyRef:
                key: application
                name: drogue-config
          - name: DROGUE_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: drogue-config
          - name: DROGUE_USER
            valueFrom:
              secretKeyRef:
                key: user
                name: drogue-config
          - name: DROGUE_DEVICE_REGISTRY
            valueFrom:
              secretKeyRef:
                key: registry
                name: drogue-config
          - name: DROGUE_MQTT_INTEGRATION
            valueFrom:
              secretKeyRef:
                key: mqtt-integration
                name: drogue-config
          - name: MQTT_GROUP_ID
            value: btmesh-operator
          - name: RECONCILE_INTERVAL
            value: 20s
        ports:
        - name: endpoint
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
